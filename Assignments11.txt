Assignments

1. Drop Down 

package sel;

import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

import org.testng.annotations.BeforeClass;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;

public class DropDown {
	static WebDriver driver;
  @Test
  public void f() {
	  driver.get("https://www.jquery-az.com/boots/demo.php?ex=63.0_2");
	  driver.manage().window().maximize();
	  driver.findElement(By.xpath("/html/body/div[3]/table/tbody/tr[2]/td[3]/div/span/div/button")).click();
  }
  @BeforeClass
  public void beforeClass() {
	  WebDriverManager.chromedriver().setup();
	  driver=new ChromeDriver();
  }

  @AfterClass
  public void afterClass() {
	  driver.close();
  }

}


2. Drag and Drop

package sel;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.annotations.AfterClass;

public class DragAndDrop {
	
	static WebDriver driver;
	
  @Test
  public void f() throws Exception {
	  
		  	 driver.get("https://jqueryui.com/droppable/");
			 Thread.sleep(500);
			 
			  
			  Actions act=new Actions(driver);
			  driver.switchTo().frame(driver.findElement(By.xpath("//*[@id=\"content\"]/iframe")));
			  
			  WebElement from=driver.findElement(By.xpath("//*[@id=\"draggable\"]"));
			  WebElement to=driver.findElement(By.xpath("//*[@id=\"droppable\"]"));
			  
			  act.dragAndDrop(from, to).build().perform();
			 
			  Thread.sleep(500);
			  String txt=driver.findElement(By.xpath("//*[@id=\"droppable\"]/p")).getText();
			  if(txt.equals("Dropped!")
				{
					  System.out.println("Drag Successful");
				  }
			  else
			  {
				  System.out.println("Drag Unsuccessful");
			  }
	
  @BeforeClass
  public void beforeClass() {
	  
	  	System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
  }

  @AfterClass
  public void afterClass() {
	  
	  driver.close();
  }

}

4. Google search bar

package Asssignments;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.Select;
import org.testng.annotations.AfterClass;

public class google {
	
	static WebDriver driver;
	
  @Test
  public void f() {
	  
	  driver.get("https://www.google.com");
	  driver.manage().window().maximize();
	  
	 // driver.findElement(By.xpath("/html/body/div[1]/div[3]/form/div[1]/div[1]/div[1]/div/div[2]/input")).sendKeys("selenuim");
	  
	  driver.findElement(By.xpath("//input[@title='Search']")).sendKeys("selenium");
	  
	  List<WebElement> list=driver.findElements(By.xpath("//ul[@role='listbox']//li/descendant::div[@class='pcTkSc']"));
	  System.out.println("Size" + list.size());
	  
	  for(int i=0;i<list.size();i++)
	  {
		  System.out.println(list.get(i).getText());
		  if(list.get(i).getText().contains("selenium download"))
		  {
			  list.get(i).click();
			  break;
		  }
	  }
	  
  }
  @BeforeClass
  public void beforeClass() {
	  
	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
		driver=new ChromeDriver();
		driver.manage().timeouts().implicitlyWait(50, TimeUnit.SECONDS);
  }

  @AfterClass
  public void afterClass() {
	  driver.close();
  }

}

5. Scroll a webpage

package Asssignments;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;

public class scrolling {
	static WebDriver driver;
  @Test
  public void f() {
	  driver.get("http://openclinic.sourceforge.net/openclinic/home/index.php");
	  
	  JavascriptExecutor js=(JavascriptExecutor)driver;
	  js.executeScript("scroll(0,400)");
  }
  @BeforeClass
  public void beforeClass() {
	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
	  driver=new ChromeDriver();
  }

  @AfterClass
  public void afterClass() {
  }

}

6.Set the size of browser window

package Asssignments;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;

public class size {
	static WebDriver driver;
  @Test
  public void f() throws Exception {
	  driver.get("https://www.zlti.com");
	  
	  Dimension d1=new Dimension(600,600);
	  
	 driver.manage().window().setSize(d1);
	  
	 // Thread.sleep(2000);
	  
	  
  }
  @BeforeClass
  public void beforeClass() {
	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
	  driver=new ChromeDriver();
  }

  @AfterClass
  public void afterClass() {
	  driver.close();
  }

}

7. Enter text without using sendkeys

package Asssignments;

import org.testng.annotations.Test;
import org.testng.annotations.BeforeClass;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;

public class SendValue {
	static WebDriver driver;
  @Test
  public void f() {
	  driver.get("https://www.saucedemo.com/");
  
	  JavascriptExecutor js=(JavascriptExecutor)driver;
	  js.executeScript("document.getElementById('user-name').value='Sayali Mhatre'");
  }
  @BeforeClass
  public void beforeClass() {
	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
	  driver=new ChromeDriver();
  }

  @AfterClass
  public void afterClass() {
  }

}

8. Screenshot 

package Asssignments;

import org.testng.annotations.Test;

import com.google.common.io.Files;

import org.testng.annotations.BeforeClass;

import java.io.File;
import java.io.IOException;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.annotations.AfterClass;

public class TakeScrenShot {
	static WebDriver driver;
  @Test
  public void f() throws Exception {
	  driver.get("https://api.jquery.com/dblclick/");
	  
	  TakesScreenshot ts=(TakesScreenshot)driver;
	  File src=ts.getScreenshotAs(OutputType.FILE);
	  Files.copy(src, new File("C:\\Users\\SAYALI MHATRE\\Music\\Selenium\\one.jpg"));
	 
  }
  @BeforeClass
  public void beforeClass() {
	  System.setProperty("webdriver.chrome.driver", "C:\\Users\\SAYALI MHATRE\\Downloads\\chromedriver_win32\\chromedriver.exe");
	  driver=new ChromeDriver();
  }

  @AfterClass
  public void afterClass() {
  }

}
